{
  "openapi": "3.0.0",
  "info": {
    "title": "GIFTCARD API",
    "description": "API for managing user login and gift card activation",
    "version": "0.1.9"
  },
  "servers": [
    {
      "url": "http://127.0.0.1:8082",
      "description": "Local development server"
    }
  ],
  "paths": {
    "/api/Login": {
      "post": {
        "summary": "User Login.",
        "description": "Logs in a user and returns a JWT token for subsequent requests.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "johndoe",
                    "description": "The username of the user."
                  },
                  "password": {
                    "type": "string",
                    "example": "password123",
                    "description": "The password of the user."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful, returns JWT token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "JWT token to be used for authenticating future requests."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, invalid credentials."
          },
          "400": {
            "description": "Bad request, missing or invalid input."
          }
        }
      }
    },
    "/api/active/{giftCardId}": {
      "post": {
        "summary": "Activate a gift card.",
        "description": "Activates a gift card using the provided ID and JWT token.",
        "parameters": [
          {
            "name": "giftCardId",
            "in": "path",
            "required": true,
            "description": "The ID of the gift card to be activated.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Gift card activated successfully."
          },
          "401": {
            "description": "Unauthorized, invalid or missing token."
          },
          "404": {
            "description": "Gift card not found."
          },
          "400": {
            "description": "Bad request, invalid input."
          },
          "500": {
            "description": "Internal server error, unexpected condition."
          }
        }
      }
    },
    "/wallet/{userId}": {
      "get": {
        "summary": "Get wallet ID.",
        "description": "Retrieves the wallet ID for the user with the given userId.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "The ID of the user whose wallet ID is to be retrieved.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Wallet ID retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "walletId": {
                      "type": "string",
                      "description": "The ID of the user's wallet."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Wallet not found for the given userId."
          },
          "401": {
            "description": "Unauthorized, invalid or missing token."
          }
        }
      }
    },
    "/wallet/{walletId}/set-balance": {
      "post": {
        "summary": "Set wallet balance.",
        "description": "Sets the balance for the wallet with the given walletId.",
        "parameters": [
          {
            "name": "walletId",
            "in": "path",
            "required": true,
            "description": "The ID of the wallet for which the balance is to be set.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "balance": {
                    "type": "number",
                    "format": "float",
                    "example": 100.5,
                    "description": "The new balance to be set for the wallet."
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Wallet balance updated successfully."
          },
          "400": {
            "description": "Bad request, invalid balance value."
          },
          "401": {
            "description": "Unauthorized, invalid or missing token."
          },
          "404": {
            "description": "Wallet not found for the given ID."
          }
        }
      }
    },
    "/wallet/{walletId}/get-balance": {
      "get": {
        "summary": "Get wallet balance.",
        "description": "Retrieves the current balance of the specified wallet.",
        "parameters": [
          {
            "name": "walletId",
            "in": "path",
            "required": true,
            "description": "The ID of the wallet to retrieve the balance for.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Wallet balance retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "balance": {
                      "type": "number",
                      "format": "float",
                      "description": "The current balance of the wallet."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Wallet not found for the given ID."
          },
          "401": {
            "description": "Unauthorized, invalid or missing token."
          }
        }
      }
    },
    "/wallet/{walletId}/get-transactions": {
      "get": {
        "summary": "Get wallet transactions.",
        "description": "Retrieves a list of transactions for the specified wallet.",
        "parameters": [
          {
            "name": "walletId",
            "in": "path",
            "required": true,
            "description": "The ID of the wallet to retrieve transactions for.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Wallet transactions retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "transactionId": {
                        "type": "string",
                        "description": "The ID of the transaction."
                      },
                      "amount": {
                        "type": "number",
                        "format": "float",
                        "description": "The amount of the transaction."
                      },
                      "date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date and time of the transaction."
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Wallet not found or no transactions available."
          },
          "401": {
            "description": "Unauthorized, invalid or missing token."
          }
        }
      }
    },
    "/api/gift-cards/link": {
      "post": {
        "summary": "Link a gift card to the authenticated user.",
        "description": "Links a gift card ID to the currently authenticated user.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "giftCardId": {
                    "type": "string",
                    "description": "The ID of the gift card to be linked.",
                    "example": "giftcard-456"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Gift card linked successfully."
          },
          "400": {
            "description": "Bad request, missing or invalid gift card ID."
          },
          "401": {
            "description": "Unauthorized, invalid or missing token."
          },
          "404": {
            "description": "Gift card not found or already linked."
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}